[{"H:\\React\\_myProject\\src\\index.js":"1","H:\\React\\_myProject\\src\\App.js":"2","H:\\React\\_myProject\\src\\components\\Layout\\Layout.js":"3","H:\\React\\_myProject\\src\\components\\Layout\\MainNavigation.js":"4","H:\\React\\_myProject\\src\\components\\Meals\\MealDetail.js":"5","H:\\React\\_myProject\\src\\components\\Meals\\MealList.js":"6","H:\\React\\_myProject\\src\\components\\Meals\\Meal.js":"7","H:\\React\\_myProject\\src\\components\\MealDB\\MealDB.js":"8","H:\\React\\_myProject\\src\\components\\pages\\SearchPage.js":"9","H:\\React\\_myProject\\src\\components\\Meals\\Ingredient\\Ingredients.js":"10","H:\\React\\_myProject\\src\\components\\Meals\\Ingredient\\Ingredient.js":"11","H:\\React\\_myProject\\src\\components\\pages\\404.js":"12","H:\\React\\_myProject\\src\\components\\UI\\LoadingSpinner.js":"13","H:\\React\\_myProject\\src\\components\\pages\\MealPage.js":"14","H:\\React\\_myProject\\src\\components\\pages\\HomePage.js":"15"},{"size":237,"mtime":1645796097384,"results":"16","hashOfConfig":"17"},{"size":1508,"mtime":1646595624147,"results":"18","hashOfConfig":"17"},{"size":327,"mtime":1646306877309,"results":"19","hashOfConfig":"17"},{"size":2145,"mtime":1646595355618,"results":"20","hashOfConfig":"17"},{"size":2007,"mtime":1646008454609,"results":"21","hashOfConfig":"17"},{"size":329,"mtime":1645822843585,"results":"22","hashOfConfig":"17"},{"size":637,"mtime":1646580145725,"results":"23","hashOfConfig":"17"},{"size":2430,"mtime":1646581584013,"results":"24","hashOfConfig":"17"},{"size":1076,"mtime":1645828868335,"results":"25","hashOfConfig":"17"},{"size":387,"mtime":1645872547997,"results":"26","hashOfConfig":"17"},{"size":669,"mtime":1646589904651,"results":"27","hashOfConfig":"17"},{"size":139,"mtime":1645882947214,"results":"28","hashOfConfig":"17"},{"size":167,"mtime":1616596572000,"results":"29","hashOfConfig":"17"},{"size":4610,"mtime":1646590024126,"results":"30","hashOfConfig":"17"},{"size":499,"mtime":1646595085799,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"tz2c73",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},"H:\\React\\_myProject\\src\\index.js",[],["65","66"],"H:\\React\\_myProject\\src\\App.js",[],"H:\\React\\_myProject\\src\\components\\Layout\\Layout.js",[],"H:\\React\\_myProject\\src\\components\\Layout\\MainNavigation.js",[],"H:\\React\\_myProject\\src\\components\\Meals\\MealDetail.js",[],"H:\\React\\_myProject\\src\\components\\Meals\\MealList.js",[],"H:\\React\\_myProject\\src\\components\\Meals\\Meal.js",[],"H:\\React\\_myProject\\src\\components\\MealDB\\MealDB.js",[],"H:\\React\\_myProject\\src\\components\\pages\\SearchPage.js",[],"H:\\React\\_myProject\\src\\components\\Meals\\Ingredient\\Ingredients.js",[],"H:\\React\\_myProject\\src\\components\\Meals\\Ingredient\\Ingredient.js",[],"H:\\React\\_myProject\\src\\components\\pages\\404.js",[],"H:\\React\\_myProject\\src\\components\\UI\\LoadingSpinner.js",[],"H:\\React\\_myProject\\src\\components\\pages\\MealPage.js",["67","68"],"import { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport LoadingSpiner from \"../UI/LoadingSpinner\";\r\nimport {\r\n  ingLister,\r\n  categoryList,\r\n  getMeals,\r\n  filterByCategory,\r\n  filterByIngredient,\r\n} from \"../MealDB/MealDB\";\r\nimport MealList from \"../Meals/MealList\";\r\nimport classes from \"./MealPage.module.css\";\r\n\r\nconst MealPage = () => {\r\n  const [meals, setMeals] = useState([]);\r\n\r\n  const [ingList, setIngList] = useState([]);\r\n  const [catList, setCatList] = useState([{ strCategory: \"Beef\" }]);\r\n\r\n  const [ingredient, setIng] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [fetchError, setfetchError] = useState();\r\n  const history = useHistory();\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchIng = async () => {\r\n      const data = await ingLister();\r\n      setIngList(data);\r\n    };\r\n    const fetchCategories = async () => {\r\n      const data = await categoryList();\r\n      setCatList(data);\r\n    };\r\n    fetchCategories();\r\n    fetchIng();\r\n\r\n    if (params.param) {\r\n      setIng(params.param);\r\n      setLoaded(true);\r\n    } else {\r\n      if (!loaded) {\r\n        console.log(\"random: \" + loaded);\r\n        fetchRandomMeals().catch((error) => {\r\n          setfetchError(error.message);\r\n        });\r\n      }\r\n    }\r\n  }, [params]); // FETCHING SELECT LISTS\r\n\r\n  useEffect(() => {\r\n    // FILTER BY CATEGORY --\r\n\r\n    const fetchByCategory = async () => {\r\n      setIsLoading(true);\r\n      const data = await filterByCategory(category);\r\n      // if (category.length !== 1) { setIng(\"\"); }\r\n      if (category.length === 1) return;\r\n      if (data === null) return;\r\n      if (data !== undefined) setIsLoading(false);\r\n      setLoaded(true);\r\n      setMeals(data);\r\n    };\r\n    if (category.length > 1) {\r\n      fetchByCategory().catch((error) => {\r\n        setfetchError(error.message);\r\n      });\r\n      setIng(\"\");\r\n    }\r\n  }, [category]);\r\n\r\n  useEffect(() => {\r\n    // FILTER BY INGR --\r\n    const fetchByIng = async () => {\r\n      setIsLoading(true);\r\n      const data = await filterByIngredient(ingredient);\r\n      console.log(\"ingr\" + ingredient);\r\n      if (ingredient.length === 1) return;\r\n      if (data === null) return;\r\n      if (data !== undefined) setIsLoading(false);\r\n\r\n      setMeals(data);\r\n    };\r\n    if (ingredient.length > 1) {\r\n      setLoaded(true);\r\n      fetchByIng().catch((error) => {\r\n        setfetchError(error.message);\r\n      });\r\n      setCategory(\"\");\r\n    }\r\n  }, [ingredient]);\r\n\r\n  // -------- FETCH RANDOM MEALS!\r\n  const fetchRandomMeals = async () => {\r\n    console.log(\"randomize\");\r\n    setIsLoading(true);\r\n    const data = await getMeals();\r\n    if (data !== undefined) {\r\n      setIsLoading(false);\r\n    }\r\n    setMeals(data);\r\n  };\r\n\r\n  const eraseURL = () => {\r\n    history.push(\"/MealPage/\");\r\n  };\r\n  /*\r\n/To Do : \r\n Handle situation where Random is fetching to same \"children\" - no double meals\r\n\r\n CSS! Modify UI for better looks and UsExp. \r\n \r\n Mobile ver. \r\n*/\r\n  if (params.param) {\r\n    console.log(\"erase \" + loaded);\r\n    eraseURL();\r\n  }\r\n  return (\r\n    <div className={classes.mainCard}>\r\n      <div className={classes.menuBar}>\r\n        <div>\r\n          <button onClick={fetchRandomMeals}> Random</button>\r\n        </div>\r\n        <div>\r\n          <select\r\n            id=\"category\"\r\n            value={category}\r\n            onChange={(e) => setCategory(e.target.value)}\r\n          >\r\n            <option value=\"0\">Select category</option>\r\n            {catList.map((cat) => (\r\n              <option value={cat.strCategory} key={cat.strCategory}>\r\n                {cat.strCategory}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className={classes.selector}>\r\n          <select\r\n            id=\"ingredient\"\r\n            value={ingredient}\r\n            onChange={(e) => {\r\n              setIng(e.target.value);\r\n            }}\r\n          >\r\n            <option value=\"0\">Select ingredient</option>\r\n            {ingList.map((ing) => (\r\n              <option value={ing.strIngredient} key={ing.idIngredient}>\r\n                {ing.strIngredient}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className={classes.mealCart}>\r\n        {!isLoading && <MealList meals={meals} />}\r\n        {isLoading && <LoadingSpiner />}\r\n        {/* Add show error */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MealPage;\r\n","H:\\React\\_myProject\\src\\components\\pages\\HomePage.js",["69"],"import { useState, useEffect } from \"react\";\r\nimport MealList from \"../Meals/MealList\";\r\nimport { getMeals } from \"../MealDB/MealDB\";\r\n\r\nimport classes from \"./HomePage.module.css\";\r\n\r\nconst DUMMY_MEALS = [\r\n  {\r\n    idMeal: \"52768\",\r\n    strMeal: \"Apple Frangipan Tart\",\r\n    strMealThumb:\r\n      \"https://www.themealdb.com/images/media/meals/wxywrq1468235067.jpg\",\r\n    strTags: \"\",\r\n    strArea: \"British\",\r\n    strCategory: \"Dessert\",\r\n  },\r\n  {\r\n    idMeal: \"53037\",\r\n    strMeal: \"Coddled pork with cider\",\r\n    strMealThumb:\r\n      \"https://www.themealdb.com/images/media/meals/7vpsfp1608588991.jpg\",\r\n    strTags: \"\",\r\n    strArea: \"Irish\",\r\n    strCategory: \"Pork\",\r\n  },\r\n  {\r\n    idMeal: \"53036\",\r\n    strMeal: \" Boxty Breakfast\",\r\n    strMealThumb:\r\n      \"https://www.themealdb.com/images/media/meals/naqyel1608588563.jpg\",\r\n    strTags: \"\",\r\n    strArea: \"Irish\",\r\n    strCategory: \"Side\",\r\n  },\r\n  {\r\n    idMeal: \"53035\",\r\n    strMeal: \"Ham hock colcannon\",\r\n    strMealThumb:\r\n      \"https://www.themealdb.com/images/media/meals/n41ny81608588066.jpg\",\r\n    strTags: \"\",\r\n    strArea: \"Irish\",\r\n    strCategory: \"Pork\",\r\n  },\r\n  {\r\n    idMeal: \"53034\",\r\n    strMeal: \"Japanese Katsudon\",\r\n    strMealThumb:\r\n      \"https://www.themealdb.com/images/media/meals/d8f6qx1604182128.jpg\",\r\n    strTags: \"\",\r\n    strArea: \"Japanese\",\r\n    strCategory: \"Side\",\r\n  },\r\n  {\r\n    idMeal: \"53033\",\r\n    strMeal: \"Japanese gohan rice\",\r\n    strMealThumb:\r\n      \"https://www.themealdb.com/images/media/meals/kw92t41604181871.jpg\",\r\n    strTags: \"\",\r\n    strArea: \"Japanese\",\r\n    strCategory: \"Side\",\r\n  },\r\n  {\r\n    idMeal: \"53032\",\r\n    strMeal: \"Tonkatsu pork\",\r\n    strMealThumb:\r\n      \"https://www.themealdb.com/images/media/meals/lwsnkl1604181187.jpg\",\r\n    strTags: \"\",\r\n    strArea: \"Japanese\",\r\n    strCategory: \"Pork\",\r\n  },\r\n  {\r\n    idMeal: \"53031\",\r\n    strMeal: \"Egyptian Fatteh\",\r\n    strMealThumb:\r\n      \"https://www.themealdb.com/images/media/meals/rlwcc51598734603.jpg\",\r\n    strTags: \"\",\r\n    strArea: \"Egyptian\",\r\n    strCategory: \"Beef\",\r\n  },\r\n];\r\n\r\nconst HomePage = () => {\r\n  const [meals, setMeals] = useState([]);\r\n  const [fetchError, setfetchError] = useState();\r\n\r\n  useEffect(() => {\r\n    fetchRandomMeals().catch((error) => {\r\n      setfetchError(error.message);\r\n    });\r\n  }, []);\r\n\r\n  const fetchRandomMeals = async () => {\r\n    const data = await getMeals();\r\n    setMeals(data);\r\n  };\r\n\r\n  if (fetchError) {\r\n    return (\r\n      <div className={classes.errorMessage}>\r\n        <p> {fetchError}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.description}>\r\n        <p>\r\n          This is simple react app that is using TheMealDB API:\r\n          https://www.themealdb.com/api.php Here you have random meals that are\r\n          fetched from API. You can also search for meal in serch bar, list them\r\n          by category or ingredient.\r\n        </p>\r\n      </div>\r\n      {/* <div className={classes.randomMeals}> Dummy Meals </div>\r\n      <MealList meals={DUMMY_MEALS} /> */}\r\n      <div className={classes.randomMeals}> Random Meals </div>\r\n      <MealList meals={meals} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":25,"column":10,"nodeType":"76","messageId":"77","endLine":25,"endColumn":20},{"ruleId":"78","severity":1,"message":"79","line":52,"column":6,"nodeType":"80","endLine":52,"endColumn":14,"suggestions":"81"},{"ruleId":"74","severity":1,"message":"82","line":7,"column":7,"nodeType":"76","messageId":"77","endLine":7,"endColumn":18},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'fetchError' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loaded'. Either include it or remove the dependency array.","ArrayExpression",["85"],"'DUMMY_MEALS' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [loaded, params]",{"range":"88","text":"89"},[1448,1456],"[loaded, params]"]