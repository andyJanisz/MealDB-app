{"version":3,"sources":["components/pages/ByIngridientPage.js"],"names":["ByIngridientPage","useState","idIngredient","strIngredient","ingList","setIngList","meals","setMeals","ingredient","setIng","useEffect","fetchByIng","a","filterByIngredient","data","length","console","log","fetchIng","ingLister","id","value","onChange","e","target","onBlur","map","ing"],"mappings":"2MAsDeA,UAlDU,WACvB,MAA8BC,mBAAS,CACrC,CAAEC,aAAc,IAAKC,cAAe,aADtC,mBAAOC,EAAP,KAAgBC,EAAhB,KAGA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA6BN,mBAAS,IAAtC,mBAAOO,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACR,IAAMC,EAAU,uCAAG,4BAAAC,EAAA,sEACEC,YAAmBL,GADrB,UACXM,EADW,OAES,IAAtBN,EAAWO,OAFE,0EAGVR,EAASO,IAHC,2CAAH,qDAKG,KAAfN,IACFQ,QAAQC,IAAI,eACZC,KAEFP,MACC,CAACH,IAEJ,IAAMU,EAAQ,uCAAG,4BAAAN,EAAA,sEACIO,cADJ,OACTL,EADS,OAEfT,EAAWS,GAFI,2CAAH,qDAKd,OACE,qCACE,0DACA,8BACE,yBACEM,GAAG,WACHC,MAAOb,EACPc,SAAU,SAACC,GAAD,OAAOd,EAAOc,EAAEC,OAAOH,QACjCI,OAAQ,SAACF,GAAD,OAAOd,EAAOc,EAAEC,OAAOH,QAJjC,UAME,2BACCjB,EAAQsB,KAAI,SAACC,GAAD,OACX,wBAAQN,MAAOM,EAAIxB,cAAnB,SACGwB,EAAIxB,eADgCwB,EAAIzB,sBAMjD,8BACE,cAAC,IAAD,CAAUI,MAAOA","file":"static/js/4.a4687599.chunk.js","sourcesContent":["import { ingLister, filterByIngredient } from \"../MealDB/MealDB\";\r\nimport { useEffect, useState } from \"react\";\r\nimport MealList from \"../Meals/MealList\";\r\n\r\nconst ByIngridientPage = () => {\r\n  const [ingList, setIngList] = useState([\r\n    { idIngredient: \"1\", strIngredient: \"Chicken\" },\r\n  ]);\r\n  const [meals, setMeals] = useState([]);\r\n  const [ingredient, setIng] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchByIng = async () => {\r\n      const data = await filterByIngredient(ingredient);\r\n      if (ingredient.length === 0) return;\r\n      return setMeals(data);\r\n    };\r\n    if (ingredient === \"\") {\r\n      console.log(\"fetching...\");\r\n      fetchIng();\r\n    }\r\n    fetchByIng();\r\n  }, [ingredient]);\r\n\r\n  const fetchIng = async () => {\r\n    const data = await ingLister();\r\n    setIngList(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div> Select an ingredient: </div>\r\n      <div>\r\n        <select\r\n          id=\"category\"\r\n          value={ingredient}\r\n          onChange={(e) => setIng(e.target.value)}\r\n          onBlur={(e) => setIng(e.target.value)}\r\n        >\r\n          <option />\r\n          {ingList.map((ing) => (\r\n            <option value={ing.strIngredient} key={ing.idIngredient}>\r\n              {ing.strIngredient}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <MealList meals={meals} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ByIngridientPage;\r\n"],"sourceRoot":""}